"""add_email_system_tables

Revision ID: 3b22d871e4d5
Revises: 8c07f8af3b28
Create Date: 2025-10-09 13:43:27.768671

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3b22d871e4d5'
down_revision: Union[str, Sequence[str], None] = '8c07f8af3b28'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('conversations_new',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_identifier', sa.String(length=255), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversations_new_id'), 'conversations_new', ['id'], unique=False)
    op.create_index(op.f('ix_conversations_new_session_identifier'), 'conversations_new', ['session_identifier'], unique=True)
    op.create_table('email_bounces',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('message_id', sa.String(length=255), nullable=True),
    sa.Column('bounce_type', sa.String(length=50), nullable=False),
    sa.Column('bounce_subtype', sa.String(length=50), nullable=False),
    sa.Column('bounce_reason', sa.Text(), nullable=True),
    sa.Column('diagnostic_code', sa.String(length=255), nullable=True),
    sa.Column('notification_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('feedback_id', sa.String(length=255), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_bounces_email'), 'email_bounces', ['email'], unique=False)
    op.create_index(op.f('ix_email_bounces_id'), 'email_bounces', ['id'], unique=False)
    op.create_index(op.f('ix_email_bounces_message_id'), 'email_bounces', ['message_id'], unique=False)
    op.create_table('email_complaints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('message_id', sa.String(length=255), nullable=True),
    sa.Column('complaint_type', sa.String(length=50), nullable=True),
    sa.Column('complaint_reason', sa.Text(), nullable=True),
    sa.Column('notification_timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('feedback_id', sa.String(length=255), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_complaints_email'), 'email_complaints', ['email'], unique=False)
    op.create_index(op.f('ix_email_complaints_id'), 'email_complaints', ['id'], unique=False)
    op.create_index(op.f('ix_email_complaints_message_id'), 'email_complaints', ['message_id'], unique=False)
    op.create_table('email_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipient_email', sa.String(length=255), nullable=False),
    sa.Column('template_name', sa.String(length=100), nullable=False),
    sa.Column('subject', sa.String(length=255), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('message_id', sa.String(length=255), nullable=True),
    sa.Column('sent_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('delivered_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('bounced_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('complained_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('bounce_type', sa.String(length=50), nullable=True),
    sa.Column('bounce_subtype', sa.String(length=50), nullable=True),
    sa.Column('bounce_reason', sa.Text(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('template_data', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_logs_id'), 'email_logs', ['id'], unique=False)
    op.create_index(op.f('ix_email_logs_message_id'), 'email_logs', ['message_id'], unique=False)
    op.create_index(op.f('ix_email_logs_recipient_email'), 'email_logs', ['recipient_email'], unique=False)
    op.create_table('email_templates',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('version', sa.Integer(), nullable=True),
    sa.Column('subject_template', sa.Text(), nullable=False),
    sa.Column('html_template', sa.Text(), nullable=False),
    sa.Column('text_template', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('usage_count', sa.Integer(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_templates_id'), 'email_templates', ['id'], unique=False)
    op.create_index(op.f('ix_email_templates_name'), 'email_templates', ['name'], unique=True)
    op.create_table('email_unsubscribes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('unsubscribed_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_email_unsubscribes_email'), 'email_unsubscribes', ['email'], unique=True)
    op.create_index(op.f('ix_email_unsubscribes_id'), 'email_unsubscribes', ['id'], unique=False)
    op.create_table('organisations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('org_id', sa.String(length=5), nullable=False),
    sa.Column('org_name', sa.String(), nullable=False),
    sa.Column('hr_email', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_organisations_id'), 'organisations', ['id'], unique=False)
    op.create_index(op.f('ix_organisations_org_id'), 'organisations', ['org_id'], unique=True)
    op.create_table('researches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('thumbnail_url', sa.String(length=500), nullable=False),
    sa.Column('source_url', sa.String(length=500), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_researches_id'), 'researches', ['id'], unique=False)
    op.create_table('subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscription_token', sa.String(length=255), nullable=False),
    sa.Column('access_code', sa.String(length=20), nullable=False),
    sa.Column('plan_type', sa.String(length=20), nullable=False),
    sa.Column('message_limit', sa.Integer(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_subscriptions_access_code'), 'subscriptions', ['access_code'], unique=True)
    op.create_index(op.f('ix_subscriptions_id'), 'subscriptions', ['id'], unique=False)
    op.create_index(op.f('ix_subscriptions_subscription_token'), 'subscriptions', ['subscription_token'], unique=True)
    op.create_table('chat_attachments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('original_filename', sa.String(length=255), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('file_type', sa.String(length=100), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('upload_url', sa.String(length=500), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('processed_content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_chat_attachments_id'), 'chat_attachments', ['id'], unique=False)
    op.create_table('conversation_usage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_identifier', sa.String(length=255), nullable=False),
    sa.Column('subscription_token', sa.String(length=255), nullable=False),
    sa.Column('messages_used', sa.Integer(), nullable=True),
    sa.Column('last_used_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['session_identifier'], ['conversations_new.session_identifier'], ),
    sa.ForeignKeyConstraint(['subscription_token'], ['subscriptions.subscription_token'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_conversation_usage_id'), 'conversation_usage', ['id'], unique=False)
    op.create_table('employees',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('employee_code', sa.String(), nullable=False),
    sa.Column('org_id', sa.String(), nullable=False),
    sa.Column('hr_email', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('department', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('hire_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_employees_employee_code'), 'employees', ['employee_code'], unique=True)
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.create_table('messages_new',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_identifier', sa.String(length=255), nullable=False),
    sa.Column('role', sa.String(length=20), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('encrypted_content', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['session_identifier'], ['conversations_new.session_identifier'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_messages_new_id'), 'messages_new', ['id'], unique=False)
    op.create_table('rate_limits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('message_count', sa.Integer(), nullable=True),
    sa.Column('window_start', sa.DateTime(timezone=True), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rate_limits_id'), 'rate_limits', ['id'], unique=False)
    op.create_table('refresh_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('token_hash', sa.String(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_revoked', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_refresh_tokens_id'), 'refresh_tokens', ['id'], unique=False)
    op.create_table('complaints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('org_id', sa.String(), nullable=True),
    sa.Column('hr_email', sa.String(), nullable=True),
    sa.Column('complaint_text', sa.Text(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('hr_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_complaints_id'), 'complaints', ['id'], unique=False)
    op.alter_column('clinical_assessments', 'assessment_type',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('clinical_assessments', 'total_score',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('clinical_assessments', 'severity_level',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('clinical_assessments', 'interpretation',
               existing_type=sa.TEXT(),
               nullable=True)
    op.alter_column('clinical_assessments', 'responses',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('clinical_assessments', 'max_score',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('clinical_assessments', 'assessment_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index(op.f('idx_clinical_assessments_category_created'), table_name='clinical_assessments', postgresql_where='(test_category IS NOT NULL)')
    op.drop_index(op.f('idx_clinical_assessments_severity_test'), table_name='clinical_assessments', postgresql_where='(severity_level IS NOT NULL)')
    op.drop_index(op.f('idx_clinical_assessments_test_category'), table_name='clinical_assessments')
    op.drop_index(op.f('idx_clinical_assessments_test_created'), table_name='clinical_assessments')
    op.drop_index(op.f('idx_clinical_assessments_test_definition_id'), table_name='clinical_assessments')
    op.drop_index(op.f('idx_clinical_assessments_user_created'), table_name='clinical_assessments')
    op.drop_index(op.f('idx_clinical_assessments_user_test'), table_name='clinical_assessments')
    op.alter_column('test_definitions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('test_definitions', 'updated_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('idx_test_definitions_active_category_name'), table_name='test_definitions')
    op.drop_index(op.f('idx_test_definitions_active_only'), table_name='test_definitions', postgresql_where='(is_active = true)')
    op.drop_index(op.f('idx_test_definitions_category_active'), table_name='test_definitions', postgresql_where='(is_active = true)')
    op.drop_index(op.f('idx_test_definitions_category_name'), table_name='test_definitions', postgresql_where='(is_active = true)')
    op.create_index(op.f('ix_test_definitions_id'), 'test_definitions', ['id'], unique=False)
    op.alter_column('test_question_options', 'test_definition_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('test_question_options', 'question_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('test_question_options', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('idx_test_question_options_definition_order'), table_name='test_question_options')
    op.drop_index(op.f('idx_test_question_options_question_id'), table_name='test_question_options')
    op.drop_index(op.f('idx_test_question_options_question_order'), table_name='test_question_options')
    op.drop_index(op.f('idx_test_question_options_test_definition_id'), table_name='test_question_options')
    op.create_index(op.f('ix_test_question_options_id'), 'test_question_options', ['id'], unique=False)
    op.drop_constraint(op.f('test_question_options_question_id_fkey'), 'test_question_options', type_='foreignkey')
    op.drop_constraint(op.f('test_question_options_test_definition_id_fkey'), 'test_question_options', type_='foreignkey')
    op.create_foreign_key(None, 'test_question_options', 'test_definitions', ['test_definition_id'], ['id'])
    op.create_foreign_key(None, 'test_question_options', 'test_questions', ['question_id'], ['id'])
    op.alter_column('test_questions', 'test_definition_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('test_questions', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('idx_test_questions_definition_number'), table_name='test_questions')
    op.drop_index(op.f('idx_test_questions_test_definition_id'), table_name='test_questions')
    op.create_index(op.f('ix_test_questions_id'), 'test_questions', ['id'], unique=False)
    op.drop_constraint(op.f('test_questions_test_definition_id_fkey'), 'test_questions', type_='foreignkey')
    op.create_foreign_key(None, 'test_questions', 'test_definitions', ['test_definition_id'], ['id'])
    op.alter_column('test_scoring_ranges', 'test_definition_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('test_scoring_ranges', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_index(op.f('idx_test_scoring_ranges_definition_priority'), table_name='test_scoring_ranges')
    op.drop_index(op.f('idx_test_scoring_ranges_test_definition_id'), table_name='test_scoring_ranges')
    op.create_index(op.f('ix_test_scoring_ranges_id'), 'test_scoring_ranges', ['id'], unique=False)
    op.drop_constraint(op.f('test_scoring_ranges_test_definition_id_fkey'), 'test_scoring_ranges', type_='foreignkey')
    op.create_foreign_key(None, 'test_scoring_ranges', 'test_definitions', ['test_definition_id'], ['id'])
    op.add_column('users', sa.Column('country', sa.String(), nullable=True))
    op.add_column('users', sa.Column('state', sa.String(), nullable=True))
    op.add_column('users', sa.Column('city', sa.String(), nullable=True))
    op.add_column('users', sa.Column('pincode', sa.String(), nullable=True))
    op.alter_column('users', 'auth_provider',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'auth_provider',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('users', 'pincode')
    op.drop_column('users', 'city')
    op.drop_column('users', 'state')
    op.drop_column('users', 'country')
    op.drop_constraint(None, 'test_scoring_ranges', type_='foreignkey')
    op.create_foreign_key(op.f('test_scoring_ranges_test_definition_id_fkey'), 'test_scoring_ranges', 'test_definitions', ['test_definition_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_test_scoring_ranges_id'), table_name='test_scoring_ranges')
    op.create_index(op.f('idx_test_scoring_ranges_test_definition_id'), 'test_scoring_ranges', ['test_definition_id'], unique=False)
    op.create_index(op.f('idx_test_scoring_ranges_definition_priority'), 'test_scoring_ranges', ['test_definition_id', 'priority', 'min_score'], unique=False)
    op.alter_column('test_scoring_ranges', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('test_scoring_ranges', 'test_definition_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'test_questions', type_='foreignkey')
    op.create_foreign_key(op.f('test_questions_test_definition_id_fkey'), 'test_questions', 'test_definitions', ['test_definition_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_test_questions_id'), table_name='test_questions')
    op.create_index(op.f('idx_test_questions_test_definition_id'), 'test_questions', ['test_definition_id'], unique=False)
    op.create_index(op.f('idx_test_questions_definition_number'), 'test_questions', ['test_definition_id', 'question_number'], unique=False)
    op.alter_column('test_questions', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('test_questions', 'test_definition_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'test_question_options', type_='foreignkey')
    op.drop_constraint(None, 'test_question_options', type_='foreignkey')
    op.create_foreign_key(op.f('test_question_options_test_definition_id_fkey'), 'test_question_options', 'test_definitions', ['test_definition_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(op.f('test_question_options_question_id_fkey'), 'test_question_options', 'test_questions', ['question_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_test_question_options_id'), table_name='test_question_options')
    op.create_index(op.f('idx_test_question_options_test_definition_id'), 'test_question_options', ['test_definition_id'], unique=False)
    op.create_index(op.f('idx_test_question_options_question_order'), 'test_question_options', ['question_id', 'display_order'], unique=False)
    op.create_index(op.f('idx_test_question_options_question_id'), 'test_question_options', ['question_id'], unique=False)
    op.create_index(op.f('idx_test_question_options_definition_order'), 'test_question_options', ['test_definition_id', 'question_id', 'display_order'], unique=False)
    op.alter_column('test_question_options', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('test_question_options', 'question_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('test_question_options', 'test_definition_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index(op.f('ix_test_definitions_id'), table_name='test_definitions')
    op.create_index(op.f('idx_test_definitions_category_name'), 'test_definitions', ['test_category', 'test_name'], unique=False, postgresql_where='(is_active = true)')
    op.create_index(op.f('idx_test_definitions_category_active'), 'test_definitions', ['test_category'], unique=False, postgresql_where='(is_active = true)')
    op.create_index(op.f('idx_test_definitions_active_only'), 'test_definitions', ['test_code', 'test_name', 'test_category'], unique=False, postgresql_where='(is_active = true)')
    op.create_index(op.f('idx_test_definitions_active_category_name'), 'test_definitions', ['is_active', 'test_category', 'test_name'], unique=False)
    op.alter_column('test_definitions', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('test_definitions', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True,
               existing_server_default=sa.text('now()'))
    op.create_index(op.f('idx_clinical_assessments_user_test'), 'clinical_assessments', ['user_id', 'test_definition_id', sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('idx_clinical_assessments_user_created'), 'clinical_assessments', ['user_id', sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('idx_clinical_assessments_test_definition_id'), 'clinical_assessments', ['test_definition_id'], unique=False)
    op.create_index(op.f('idx_clinical_assessments_test_created'), 'clinical_assessments', ['test_definition_id', sa.literal_column('created_at DESC')], unique=False)
    op.create_index(op.f('idx_clinical_assessments_test_category'), 'clinical_assessments', ['test_category'], unique=False)
    op.create_index(op.f('idx_clinical_assessments_severity_test'), 'clinical_assessments', ['severity_level', 'test_definition_id'], unique=False, postgresql_where='(severity_level IS NOT NULL)')
    op.create_index(op.f('idx_clinical_assessments_category_created'), 'clinical_assessments', ['test_category', sa.literal_column('created_at DESC')], unique=False, postgresql_where='(test_category IS NOT NULL)')
    op.alter_column('clinical_assessments', 'assessment_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('clinical_assessments', 'max_score',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('clinical_assessments', 'responses',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('clinical_assessments', 'interpretation',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('clinical_assessments', 'severity_level',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('clinical_assessments', 'total_score',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('clinical_assessments', 'assessment_type',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_index(op.f('ix_complaints_id'), table_name='complaints')
    op.drop_table('complaints')
    op.drop_index(op.f('ix_refresh_tokens_id'), table_name='refresh_tokens')
    op.drop_table('refresh_tokens')
    op.drop_index(op.f('ix_rate_limits_id'), table_name='rate_limits')
    op.drop_table('rate_limits')
    op.drop_index(op.f('ix_messages_new_id'), table_name='messages_new')
    op.drop_table('messages_new')
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.drop_index(op.f('ix_employees_employee_code'), table_name='employees')
    op.drop_table('employees')
    op.drop_index(op.f('ix_conversation_usage_id'), table_name='conversation_usage')
    op.drop_table('conversation_usage')
    op.drop_index(op.f('ix_chat_attachments_id'), table_name='chat_attachments')
    op.drop_table('chat_attachments')
    op.drop_index(op.f('ix_subscriptions_subscription_token'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_id'), table_name='subscriptions')
    op.drop_index(op.f('ix_subscriptions_access_code'), table_name='subscriptions')
    op.drop_table('subscriptions')
    op.drop_index(op.f('ix_researches_id'), table_name='researches')
    op.drop_table('researches')
    op.drop_index(op.f('ix_organisations_org_id'), table_name='organisations')
    op.drop_index(op.f('ix_organisations_id'), table_name='organisations')
    op.drop_table('organisations')
    op.drop_index(op.f('ix_email_unsubscribes_id'), table_name='email_unsubscribes')
    op.drop_index(op.f('ix_email_unsubscribes_email'), table_name='email_unsubscribes')
    op.drop_table('email_unsubscribes')
    op.drop_index(op.f('ix_email_templates_name'), table_name='email_templates')
    op.drop_index(op.f('ix_email_templates_id'), table_name='email_templates')
    op.drop_table('email_templates')
    op.drop_index(op.f('ix_email_logs_recipient_email'), table_name='email_logs')
    op.drop_index(op.f('ix_email_logs_message_id'), table_name='email_logs')
    op.drop_index(op.f('ix_email_logs_id'), table_name='email_logs')
    op.drop_table('email_logs')
    op.drop_index(op.f('ix_email_complaints_message_id'), table_name='email_complaints')
    op.drop_index(op.f('ix_email_complaints_id'), table_name='email_complaints')
    op.drop_index(op.f('ix_email_complaints_email'), table_name='email_complaints')
    op.drop_table('email_complaints')
    op.drop_index(op.f('ix_email_bounces_message_id'), table_name='email_bounces')
    op.drop_index(op.f('ix_email_bounces_id'), table_name='email_bounces')
    op.drop_index(op.f('ix_email_bounces_email'), table_name='email_bounces')
    op.drop_table('email_bounces')
    op.drop_index(op.f('ix_conversations_new_session_identifier'), table_name='conversations_new')
    op.drop_index(op.f('ix_conversations_new_id'), table_name='conversations_new')
    op.drop_table('conversations_new')
    # ### end Alembic commands ###
